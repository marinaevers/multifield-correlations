{"version":3,"sources":["webpack:///./src/lib/components/MultiFieldMapView.js"],"names":["MultiFieldMapViewD3","el","props","width","height","svg","d3","append","attr","data","map","x","Math","random","y","circles","selectAll","enter","d","style","lasso","closePathSelect","closePathDistance","items","targetArea","call","on","selectedData","selectedItems","console","log","domain","imageWidth","range","imageHeight","polygons","points","p","colormap","field","remove","drawPolygons"],"mappings":"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","file":"db0143f-main-wps-hmr.js","sourcesContent":["import 'd3-lasso';\nimport * as d3 from 'd3'\n\n\nexport default class MultiFieldMapViewD3 {\n    constructor(el, props) {\n        const width = 500;\n        const height = 500;\n\n        const svg = d3.select('body')\n            .append('svg')\n            .attr('width', width)\n            .attr('height', height);\n\n        const data = d3.range(100).map(() => ({\n            x: Math.random() * width,\n            y: Math.random() * height,\n        }));\n\n        const circles = svg.selectAll('circle')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr('cx', d => d.x)\n            .attr('cy', d => d.y)\n            .attr('r', 10)\n            .style('fill', 'steelblue');\n\n        const lasso = d3.lasso()\n            .closePathSelect(true)\n            .closePathDistance(100)\n            .items(circles)\n            .targetArea(svg);\n\n        svg.call(lasso);\n\n        lasso.on('end', () => {\n            const selectedData = lasso.selectedItems().data();\n            console.log(selectedData);\n        });\n    }\n\n    drawPolygons() {\n        const props = this.props\n        const x = d3.scaleLinear()\n            .domain([0, this.props.imageWidth])\n            .range([0, this.props.width]);\n\n        const y = d3.scaleLinear()\n            .domain([this.props.imageHeight, 0])\n            .range([0, this.props.height]);\n\n        this.svg.selectAll('polygons')\n            .data(this.props.polygons)\n            .enter()\n            .append('polygon')\n            .attr('class', 'polygon')\n            .attr('points', function(d) {\n                return d.points.map((p) => [x(p[0]), y(p[1])]);\n            })\n            .attr('stroke', function(d) {\n                return props.colormap[d.field];\n            })\n            .attr('stroke-width', 3)\n            .attr('fill', 'none');\n    }\n\n    update(props) {\n        this.props = props;\n        this.svg.selectAll('.polygon').remove();\n        this.drawPolygons();\n    }\n}"],"sourceRoot":""}