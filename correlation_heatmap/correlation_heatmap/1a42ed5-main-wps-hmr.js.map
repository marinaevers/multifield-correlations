{"version":3,"sources":["webpack:///./src/lib/components/CorrelationHeatmap.js"],"names":["CorrelationHeatmapD3","el","props","update","bind","drawHeatmap","svg","d3","append","attr","width","margin","height","x","range","domain","segmentIDs","padding","y","reverse","call","myColor","kde","kernel","thresholds","data","map","t","d","epanechnikov","bandwidth","Math","abs","selectAll","id1","id2","enter","style","total","i","xDens","ticks","densities","correlations","yDens","line","curve","xd","yd","datum","remove"],"mappings":"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","file":"1a42ed5-main-wps-hmr.js","sourcesContent":["import * as d3 from 'd3'\n\nexport default class CorrelationHeatmapD3 {\n    constructor(el, props) {\n        this.props = props;\n        this.update = this.update.bind(this);\n        this.drawHeatmap = this.drawHeatmap.bind(this);\n\n        this.svg = d3.select(el).append('svg')\n            .attr(\"width\", props.width+2*props.margin)\n            .attr(\"height\", props.height+2*props.margin)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + props.margin + \",\" + props.margin + \")\");\n\n        this.drawHeatmap();\n    }\n\n    drawHeatmap() {\n        // Axes heatmap\n        const x = d3.scaleBand()\n            .range([0, this.props.width])\n            .domain(this.props.segmentIDs)\n            .padding(0.01);\n        const y = d3.scaleBand()\n            .range([0, this.props.height])\n            .domain(this.props.segmentIDs.reverse())\n            .padding(0.01);\n\n        // Add axes\n        this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(0, \" + this.props.height + \")\")\n            .call(d3.axisBottom(x));\n        this.svg.append(\"g\")\n            .call(d3.axisLeft(y));\n\n        // Build color scale\n        // TODO: Adapt\n        const myColor = d3.scaleLinear()\n            .range([\"white\", \"#69b3a2\"])\n            .domain([-1, 1])\n\n        function kde(kernel, thresholds, data) {\n            return thresholds.map(t => [t, d3.mean(data, d => kernel(t - d))]);\n        }\n\n        function epanechnikov(bandwidth) {\n            return x => Math.abs(x /= bandwidth) <= 1 ? 0.75 * (1 - x * x) / bandwidth : 0;\n        }\n\n        // TODO: Select suitable value\n        const bandwidth = 0.1;\n\n        // draw heatmap\n        this.svg.selectAll()\n            .data(this.props.data, function(d) {return d.id1+\":\"+d.id2})\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", function(d) {return x(d.id1)})\n            .attr(\"y\", function(d) {return y(d.id2)})\n            .attr(\"width\", x.bandwidth())\n            .attr(\"height\", y.bandwidth())\n            .style(\"fill\", function(d) {return myColor(d.total)})\n        // TODO: Remove after finding solution for lines\n        /*const xDens = d3.scaleLinear()\n            .range([x(this.props.data[0].id1), x(this.props.data[0].id1)+x.bandwidth()])\n            .domain([-1, 1]);\n        const thresholds = xDens.ticks();\n        console.log(this.props.data[0].correlations);\n        const densities = kde(epanechnikov(bandwidth), thresholds, this.props.data[0].correlations);\n        console.log(densities);\n        const yDens = d3.scaleLinear()\n            .range([y(this.props.data[0].id2), y(this.props.data[0].id2)+y.bandwidth()])\n            .domain([3, 0]);\n        const line = d3.line()\n            .curve(d3.curveBasis)\n            .x(xd => xDens(xd[0]))\n            .y(yd => yDens(yd[1]));*/\n        for(let i in this.props.data) {\n            const d = this.props.data[i];\n            const xDens = d3.scaleLinear()\n                .range([x(d.id1), x(d.id1)+x.bandwidth()])\n                .domain([-1, 1]);\n            const thresholds = xDens.ticks(50);\n            const densities = kde(epanechnikov(bandwidth), thresholds, d.correlations);\n            const yDens = d3.scaleLinear()\n                .range([y(d.id2), y(d.id2)+y.bandwidth()])\n                .domain([5, 0]);\n            const line = d3.line()\n                .curve(d3.curveBasis)\n                .x(xd => xDens(xd[0]))\n                .y(yd => yDens(yd[1]));\n            this.svg//.selectAll(\"lines\")\n                //.data(this.props.data)//, function(d) {return d.id1+\":\"+d.id2})\n                //.enter()\n                .append(\"path\")\n                .datum(densities)\n                /*.datum(function(d) {\n                    const xDens = d3.scaleLinear()\n                        .range([x(d.id1), x(d.id1)+x.bandwidth])\n                        .domain(0, 1)\n                    const thresholds = xDens.ticks(40);\n                    return kde(epanechnikov(bandwidth), thresholds, d.correlations);\n                })*/\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"#000\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"stroke-linejoin\", \"round\")\n                /*.attr(\"d\", function(d) {\n                    const xDens = d3.scaleLinear()\n                        .range([x(d.id1), x(d.id1) + x.bandwidth()])\n                        .domain([-1, 1]);\n                    const yDens = d3.scaleLinear()\n                        .range([y(d.id2), y(d.id2) + y.bandwidth()])\n                        .domain([0, 3]);\n                    const thresholds = xDens.ticks(40);\n                    const densities = kde(epanechnikov(bandwidth), thresholds, d.correlations);\n                    return d3.line()\n                        .curve(d3.curveBasis)\n                        .x(xd => xDens(xd[0]))\n                        .y(yd => yDens(yd[1]))\n                })*/\n                .attr(\"d\", line);\n        }\n\n\n    }\n\n    update(props) {\n        this.props = props;\n        this.svg.selectAll('*').remove();\n        this.drawHeatmap();\n    }\n}"],"sourceRoot":""}